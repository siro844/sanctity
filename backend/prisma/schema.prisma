// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  username String @unique

  comments     Comment[]
  created_at   DateTime      @default(now())
  RefreshToken RefreshToken?

  @@map("users")
}

model Comment {
  id       Int    @id @default(autoincrement())
  body     String
  authorId Int
  author   User   @relation(fields: [authorId], references: [id])

  parentId Int?
  parent   Comment?  @relation("CommentTree", fields: [parentId], references: [id])
  children Comment[] @relation("CommentTree")

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([deleted, deletedAt])
  @@index([authorId])
  @@index([parentId])
  @@map("comments")
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  expiration DateTime

  @@map("refresh_tokens")
}
